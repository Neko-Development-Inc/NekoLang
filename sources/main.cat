:3 cat-flap
// Defines entrypoint

// Include 'test.cat' into this file
pls test

// Create variable test_N with the value 3
uwu test_N < 3 >

// Include 'utils.cat' into a variable called 'u'
pls 'utils.cat' as u

// Include 'test.cat' into this file, 3 times
pls test
pls test
pls test

// Create string variable
//  and assign an on-change event
var str <
    "hello<#test_N>" * test_N
>^.^<
    println("String changed from " + old + " to " + new)
    // Re-assign the current reassignment.
    // This will not trigger another on-change event call.
    new < "owo" >
>

owo b < fact, fake >

// floof

u.Baggy()
// Execute the 'Baggy' function from 'utils'

// Class example
< box Box1 >.<

>

// This is a comment

/*
This is a comment
*/

'''
This is a comment
'''

<--
This is a comment
-->

-region_name->
Code inside a region
<-region_name-

// Class example, using Box1 as parent box
< box Box2 / Box1 >w<

>

// Create an instance of 'Box2'
create Box2()

angy o < 3 > // readonly

// try-catch basically
scawy <
    o < 1 > // reassign o to 1 - throws exception
>.< // cant-reassign-angy-Exception
    println("SCAWY!!!")
>

// alternative try-catch
spoopy <
    owo i < 2 / 0 >
>.< // cant-divide-by-zero-Exception
    println("SPOOPY!!!")
>.< // finally
    println("spoopy finally over <:o")
>

// Json example:
owo json <{
    testKey: 'test value'
}>
print(json.testKey) // prints 'test value'
json.testKey <'OwO'>
print(json.testKey) // prints 'OwO'

// math example:
owo a < 3 >         // 3
var b < a + 1 >     // 4
uwu c < a++ >       // 3 - assigns value 'a' THEN increments afterwards
var d < ++a >       // 4 - increments first THEN assigns value 'a'
owo e < a++ + a >   // 3 + 3 - assigns value 'a' + 'a' = 6, THEN increments afterwards
var f < a++ + ++a > // 3 + 4 - assigns value 'a' + 'a=a+1' = 7